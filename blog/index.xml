<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Trevor Brindle</title>
    <link>https://tabrindle.github.io/blog/</link>
    <description>Recent content in Blog on Trevor Brindle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 09 Feb 2016 13:46:00 -0500</lastBuildDate>
    
	<atom:link href="https://tabrindle.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Staffing your team: the math behind it.</title>
      <link>https://tabrindle.github.io/staffing-your-team-the-math-behind-it/</link>
      <pubDate>Tue, 09 Feb 2016 13:46:00 -0500</pubDate>
      
      <guid>https://tabrindle.github.io/staffing-your-team-the-math-behind-it/</guid>
      <description>Your products are only as good as your team. Your team is only as good as time and skill allows them to be. And time and skill is not free.
Even if for some reason, you wished to decouple the concept of being a good business person from being a good manager and people person, to only look at the money at stake, it is still in your benefit to pay to hire good resources, and pay to keep good resources.</description>
    </item>
    
    <item>
      <title>Sencha Touch/ExtJS with ES6: UPDATED</title>
      <link>https://tabrindle.github.io/sencha-touch-extjs-with-es6/</link>
      <pubDate>Mon, 08 Feb 2016 18:00:00 -0500</pubDate>
      
      <guid>https://tabrindle.github.io/sencha-touch-extjs-with-es6/</guid>
      <description>Sencha Touch/ExtJS If you have stuck with Sencha Touch or ExtJS for this long, it&amp;rsquo;s probably for a very good reason. Maybe the enterprise you work for pays for it, and that&amp;rsquo;s just what you have, or perhaps you&amp;rsquo;re just very experienced with it, and have a certain fondness for the layout of the framework: the extensible class system, the reusable view components, etc. Or, maybe you just haven&amp;rsquo;t had the time or energy to wade through the exhausting barrage of new JS frameworks that seem to appear every other day.</description>
    </item>
    
    <item>
      <title>How to fix Sencha&#39;s loading spinner after Chrome 43</title>
      <link>https://tabrindle.github.io/fixing-senchas-loading-spinner/</link>
      <pubDate>Wed, 20 May 2015 18:00:00 -0500</pubDate>
      
      <guid>https://tabrindle.github.io/fixing-senchas-loading-spinner/</guid>
      <description>With Chrome 43, much more than just lists were broken with Sencha. Most recently I noticed the standard loading spinner no longer animates. From my travels through this code before, I knew that it was animated using keyframes, and was in sort of a strange spot (Class.scss in the base theme). So I thought I would start my hunt there. As it turns out, Chrome is moving away from preferring -webkit vendor prefixes on implementations that are now standardized, and it&amp;rsquo;s causing things to break.</description>
    </item>
    
    <item>
      <title>Chrome 43 Broke Sencha</title>
      <link>https://tabrindle.github.io/chrome-43-broke-sencha/</link>
      <pubDate>Tue, 28 Apr 2015 18:00:00 -0500</pubDate>
      
      <guid>https://tabrindle.github.io/chrome-43-broke-sencha/</guid>
      <description>I&amp;rsquo;m probably not the only one who, starting last September started seeing deprecation warnings while developing my Sencha Touch app. Turns out, the Chromium project wants to deprecate the overflowchanged event in Blink/Chrome. They cite that it is a non-standard event with near zero use, however Mozilla has a rough equivalent set of events underflow and overflow. This deprecation is a bit of a problem for Sencha because the framework uses this event to detect element resizes and paints in Chrome.</description>
    </item>
    
    <item>
      <title>An Open Letter to Technical Recruiters</title>
      <link>https://tabrindle.github.io/an-open-letter-to-technical-recruiters/</link>
      <pubDate>Tue, 08 Jul 2014 18:00:00 -0500</pubDate>
      
      <guid>https://tabrindle.github.io/an-open-letter-to-technical-recruiters/</guid>
      <description>Hi. This is Trevor Brindle. Yes, my day is going fine, not that you really care. I am already judging you for your name, your lack of speaking skills, or for the fact that you live in a city I have no intention of living in, or even liking - Iâ€™m looking at you Detroit MI, San Jose CA, and Houston TX. If you bothered to read my profile, I will not relocate.</description>
    </item>
    
    <item>
      <title>The argument for Hybrid Mobile apps</title>
      <link>https://tabrindle.github.io/the-argument-for-hybrid-mobile-apps/</link>
      <pubDate>Wed, 23 Apr 2014 21:51:00 -0500</pubDate>
      
      <guid>https://tabrindle.github.io/the-argument-for-hybrid-mobile-apps/</guid>
      <description>Native is better at a lot of things. Working in this field, you get a lot of native developers trying to convert you. Then they get confused when you refute only some of their points. More features, better performance, and a lot of developer talent out there. There are things in native that you just can&amp;rsquo;t do with web technologies like HTML, JavaScript and CSS. But that doesn&amp;rsquo;t always mean its the best idea.</description>
    </item>
    
  </channel>
</rss>